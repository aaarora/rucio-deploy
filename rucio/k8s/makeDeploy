#!/bin/bash

DB_ADDR=$(kubectl get pods -l k8s-app=postgres -o jsonpath="{.items[0].status.podIP}")
FTS_ADDR=$(kubectl get pods -l k8s-app=fts -o jsonpath="{.items[0].status.podIP}")

cat <<EOF > $(pwd)/rucio/k8s/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: rucio
  name: rucio
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: rucio
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: rucio
    spec:
      containers:
      - name: rucio
        image: aaarora/rucio-deploy:latest
        imagePullPolicy: Always
        env:
        - name: DB_ADDR
          value: $DB_ADDR
        - name: FTS_ADDR
          value: $FTS_ADDR 
        - name: OSG_FQDN
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 443
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 1
            memory: 2Gi
        volumeMounts:
        - name: rucio-conf
          mountPath: /opt/rucio/etc/rucio.cfg
          subPath: rucio.cfg
        - name: rucio-conf
          mountPath: /opt/rucio/etc/alembic.ini
          subPath: alembic.ini
        - name: rucio-misc-scripts
          mountPath: /opt/rucio/tools/add-rse.sh
          subPath: add-rse.sh
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: rucio-conf
        configMap:
          name: rucio-conf
          items:
          - key: rucio.cfg
            path: rucio.cfg
          - key: alembic.ini
            path: alembic.ini
      - name: rucio-misc-scripts
        configMap:
          name: rucio-misc-scripts
          items:
          - key: add-rse.sh
            path: add-rse.sh
EOF

cat <<EOF > $(pwd)/rucio/k8s/rucio.cfg
[common]
logdir = /var/log/rucio
loglevel = DEBUG
mailtemplatedir=/opt/rucio/etc/mail_templates

[client]
rucio_host = https://localhost:443
auth_host = https://localhost:443
auth_type = userpass
username = ddmlab
password = secret
ca_cert = /etc/grid-security/certificates/5fca1cb1.0
client_cert = /opt/rucio/etc/usercert.pem
client_key = /opt/rucio/etc/userkey.pem
client_x509_proxy = \$X509_USER_PROXY
account = root
request_retries = 3

[database]
default = postgresql://rucio:secret@$DB_ADDR/rucio
schema = dev
echo=0
pool_recycle=3600
pool_size=20
max_overflow=20
pool_reset_on_return=rollback

[bootstrap]
userpass_identity = ddmlab
userpass_pwd = secret
userpass_email = rucio-dev@cern.ch

# Default development client certificate from /opt/rucio/etc/usercert.pem
x509_identity = /CN=Rucio User
x509_email = rucio-dev@cern.ch

# Default Kerberos account
gss_identity = rucio-dev@CERN.CH
gss_email = rucio-dev@cern.ch


[conveyor]
scheme = https,davs,gsiftp,root,srm
#scheme = https
#user_transfers = cms
#user_activities = ['dummy_user_activity']
#hostcert = /etc/grid-security/hostcert.pem
#hostkey = /etc/grid-security/hostkey.pem
transfertool = fts3
ftshosts = https://$FTS_ADDR:8446
cacert = /etc/grid-security/certificates/5fca1cb1.0
usercert = /opt/rucio/etc/usercertkey.pem

[messaging-fts3]
port = 61123
ssl_key_file = /opt/rucio/etc/userkey.pem
ssl_cert_file = /opt/rucio/etc/usercert.pem
destination = /topic/transfer.fts_monitoring_queue_state
brokers = activemq
voname = atlas

[messaging-hermes]
username = hermes
password = supersecret
port = 61613
nonssl_port = 61613
use_ssl = False
destination = /queue/events
ssl_key_file = /opt/rucio/etc/userkey.pem
ssl_cert_file = /opt/rucio/etc/usercert.pem
brokers = activemq
voname = atlas
email_from = Rucio <rucio-dev@cern.ch>
email_test = spamspamspam@cern.ch

[transmogrifier]
maxdids = 100000

[accounts]
# These are accounts that can write into scopes owned by another account
special_accounts = panda, tier0

[trace]
tracedir = /var/log/rucio/trace
brokers=activemq
port=61013
username = username
password = password
topic = /topic/rucio.tracer

[nongrid-trace]
tracedir = /var/log/rucio/trace
brokers=activemq
port=61013
username = username
password = password
topic = /topic/rucio.tracer

[tracer-kronos]
brokers=activemq
port=61013
ssl_key_file = /opt/rucio/etc/userkey.pem
ssl_cert_file = /opt/rucio/etc/usercert.pem
queue = /queue/Consumer.kronos.rucio.tracer
prefetch_size = 10
chunksize = 10
subscription_id = rucio-tracer-listener
use_ssl = False
reconnect_attempts = 100
excluded_usrdns = /DC=ch/DC=cern/OU=Organic Units/OU=Users/CN=gangarbt/CN=722147/CN=Robot: Ganga Robot/CN=proxy
username = username
password = password
dataset_wait = 60

[injector]
file = /opt/rucio/tools/test.file.1000
bytes = 1000
md5 = fd21ce524a9e45060fd3f62c4ef6a386
adler32 = 52590737

[alembic]
cfg = /opt/rucio/etc/alembic.ini

[messaging-cache]
port = 61023
ssl_key_file = /opt/rucio/etc/userkey.pem
ssl_cert_file = /opt/rucio/etc/usercert.pem
destination = /topic/rucio.cache
brokers = activemq
voname = atlas
account = cache_mb

[test]
cacert = /etc/grid-security/certificates/5fca1cb1.0
usercert = /opt/rucio/etc/usercert.pem
userkey = /opt/rucio/etc/userkey.pem

[nagios]
proxy = /opt/rucio/etc/usercertkey.pem
rfcproxy = /opt/rucio/etc/usercertkey.pem
fts_servers = https://fts3:8446

[auditor]
cache = /opt/rucio/auditor-cache
results = /opt/rucio/auditor-results

[hermes]
email_from = Rucio <rucio-dev@cern.ch>
email_test = spamspamspam@cern.ch

[c3po]
placement_algorithm = t2_free_space
elastic_url = http://elastic:9200
redis_host = rucio
redis_port = 6379

[c3po-popularity]
elastic_url = http://elastic:9200

[c3po-site-mapper]
panda_url = http://agis:80/request/pandaqueue/query/list/?json
ddm_url = http://agis:80/request/ddmendpoint/query/list/?json

[c3po-workload]
panda_url = http://bigpanda:80/jobs/?category=analysis&jobstatus=running
window = 604800

[policy]
permission = atlas
schema = atlas
lfn2pfn_algorithm_default = hash
support = rucio-dev@cern.ch
support_rucio = https://github.com/rucio/rucio/issues/

[credentials]
gcs = /opt/rucio/etc/google-cloud-storage-test.json

[api]
endpoints = accountlimits, accounts, archives, auth, config, credentials, dids, dirac, export, heartbeats, identities, import, lifetime_exceptions, locks, meta, ping, redirect, replicas, requests, rses, rules, scopes, subscriptions, tmp_dids, traces, vos
EOF

cat <<EOF > $(pwd)/rucio/k8s/alembic.ini
# Copyright European Organization for Nuclear Research (CERN)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Vincent Garonne <vincent.garonne@cern.ch>, 2014
# - Mario Lassnig <mario.lassnig@cern.ch>, 2019

# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = lib/rucio/db/sqla/migrate_repo/

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# max length of characters to apply to the
# "slug" field
#truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

sqlalchemy.url = postgresql://rucio:secret@$DB_ADDR/rucio
version_table_schema = dev

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
EOF
