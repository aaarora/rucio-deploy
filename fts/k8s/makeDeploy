#!/bin/bash

cat <<EOF > $(pwd)/fts/k8s/deploy.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: fts
  name: fts
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: fts
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: fts
    spec:
      containers:
      - name: fts
        image: aaarora/fts-deploy:latest
        imagePullPolicy: Always
        env:
        - name: DB_ADDR
          value: $(kubectl get pods -l k8s-app=mysql -o jsonpath="{.items[0].status.podIP}") 
        - name: OSG_FQDN
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 8446
        - containerPort: 8449
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 1
            memory: 2Gi
        volumeMounts:
        - name: fts-conf
          mountPath: /etc/fts3/fts3config
          subPath: fts3config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: fts-conf
        configMap:
          name: fts-conf
          items:
          - key: fts3config
            path: fts3config
EOF

cat <<EOF > $(pwd)/fts/k8s/fts3config
SiteName=DOCKER

AuthorizedVO=*

DbType=mysql
DbUserName=fts
DbPassword=fts
DbConnectString=$(kubectl get pods -l k8s-app=mysql -o jsonpath="{.items[0].status.podIP}"):3306/fts

LogLevel=DEBUG

MinRequiredFreeRAM = 16
MaxUrlCopyProcesses = 4

[roles]
Public = all:transfer;all:config;all:datamanagement
EOF
